# SRBM main function
# leak helper is sensistivity ov average
print("Starting the SRBM simulation...")
out = main(W, b_v, b_c, b_h, Id = Ids, sim_time = sim_time, t_sim = t_sim, dorun = True, n_classes = 5,
           monitors = True, display=False, # set display to false if no lables are used 
           # Ageing parameters:
           p_target = 1e-10, sparsity_cost = 1e-4 , # sparsity cost in learning equation
           leak_helper = 10, # how reactive is the helper neuron that determines the average firing rate of the hidden neurons (for the sparsity cost)
           age_neurons = True, # Should the network age in any way?
           age_leak = False, # Should the leak conductance depend on the age of the neuron?
           age_threshold= True, # Should the threshold depend on the age of the neuron?
           threshold_ageing_degree = 1, # How much should the threshold depend on the age of the neuron?
           set_connectivity = True, # Should the connectivity depend on the age of the neuron?
           connectivity_born=0, connectivity_mature=0.05, # How connected are the neurons at the beginning and at the end of their life? If the same number is given, the connectivity is constant.
           generations = 3, # How often are neurons reborn? Only matters if tunrover is True!
           turnover=True, # Should neurons die?
           prop_born= 0.1, # How many neurons are yet to be born thoughout the whole simulation? Only matters if turnover is True!
           gompertz=[0.5, 5], # horizontal shift, growth rate
           apt_wt_str = 0.25, apt_diff = 0.6, apt_age = 0.15, # weight of weight strength and differntiation and age on p_aptosis
           n_percent_aptosis = 0.3, # percentage of neurons in aptosis ranking 
           ) 
locals().update(out)

saved as: ageing_100_turnover_3.pkl


p_target = 1e-10 , sparsity_cost = 0.1 +0, #  !!!